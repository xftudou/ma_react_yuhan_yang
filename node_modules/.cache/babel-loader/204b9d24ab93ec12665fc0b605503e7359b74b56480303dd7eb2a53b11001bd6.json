{"ast":null,"code":"var _jsxFileName = \"/Users/alinayang/Desktop/School/Fall 2024/cs5610/ma_react_yuhan_yang/src/Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { GridContext } from './GridContext';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = () => {\n  _s();\n  const {\n    grid\n  } = useContext(GridContext);\n  const onCount = grid.flat().filter(Boolean).length;\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(2, 100px)',\n    gridTemplateRows: 'repeat(2, 100px)'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count: \", onCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: grid.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n        rowIndex: rowIndex,\n        colIndex: colIndex\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Grid, \"KbDnEvt9rrF8AeiRORqSAilB/FY=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useContext","GridContext","Cell","jsxDEV","_jsxDEV","Grid","_s","grid","onCount","flat","filter","Boolean","length","gridStyle","display","gridTemplateColumns","gridTemplateRows","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","map","row","rowIndex","cell","colIndex","_c","$RefreshReg$"],"sources":["/Users/alinayang/Desktop/School/Fall 2024/cs5610/ma_react_yuhan_yang/src/Grid.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { GridContext } from './GridContext';\nimport Cell from './Cell';\n\nconst Grid = () => {\n    const { grid } = useContext(GridContext);\n\n    const onCount = grid.flat().filter(Boolean).length;\n\n    const gridStyle = {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 100px)',\n        gridTemplateRows: 'repeat(2, 100px)',\n    };\n\n    return (\n        <div className='grid'>\n            <h1>Count: {onCount}</h1>\n            <div style={gridStyle}>\n                {grid.map((row, rowIndex) =>\n                    row.map((cell, colIndex) => (\n                        <Cell\n                            key={`${rowIndex}-${colIndex}`}\n                            rowIndex={rowIndex}\n                            colIndex={colIndex}\n                        />\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Grid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAK,CAAC,GAAGP,UAAU,CAACC,WAAW,CAAC;EAExC,MAAMO,OAAO,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAACC,MAAM;EAElD,MAAMC,SAAS,GAAG;IACdC,OAAO,EAAE,MAAM;IACfC,mBAAmB,EAAE,kBAAkB;IACvCC,gBAAgB,EAAE;EACtB,CAAC;EAED,oBACIZ,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBd,OAAA;MAAAc,QAAA,GAAI,SAAO,EAACV,OAAO;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBlB,OAAA;MAAKmB,KAAK,EAAEV,SAAU;MAAAK,QAAA,EACjBX,IAAI,CAACiB,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KACpBD,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,QAAQ,kBACnBxB,OAAA,CAACF,IAAI;QAEDwB,QAAQ,EAAEA,QAAS;QACnBE,QAAQ,EAAEA;MAAS,GAFd,GAAGF,QAAQ,IAAIE,QAAQ,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGjC,CACJ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChB,EAAA,CA3BID,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}